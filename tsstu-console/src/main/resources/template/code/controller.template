package com.tsstu.console.controller;

import java.util.ArrayList;
<#if hasDate==true>
import java.util.Date;
</#if>
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import com.tsstu.console.constants.Constants.DetailDataTypeConstants;
import com.tsstu.console.constants.Constants.DictConstants;
import com.tsstu.console.core.entity.Result;
import com.tsstu.console.core.entity.Detail;
import com.tsstu.console.core.page.Pager;
import com.tsstu.console.core.view.POIExcelView;
import com.tsstu.console.model.${objectName};
import com.tsstu.console.service.${objectName}Service;
import com.tsstu.console.util.MapUtils;

@Controller
@RequestMapping("/${objectName2?uncap_first}")
public class ${objectName}Controller extends BaseController {

	@Autowired
	public ${objectName}Service ${objectName?uncap_first}Service;
	
	/**
	 * 分页查询
	 * @param pager
	 * @return
	 */
	@RequestMapping("/index")
	public ModelAndView index(Pager<${objectName}> pager) {
		ModelAndView mv = new ModelAndView("${objectName2}/${objectName2}_index");
		super.initPageData(pager);
		${objectName?uncap_first}Service.getList(pager);
		mv.addObject("pageInfo", pager);
		return mv;
	}
	
	/**
	 * 详情页面
	 * @return
	 */
	@RequestMapping(value="/detail", method=RequestMethod.GET)
	public ModelAndView detail(Integer id) {
		ModelAndView mv = new ModelAndView("public/detail");
		${objectName} model = ${objectName?uncap_first}Service.getOne(id);
		List<Detail> detailList = new ArrayList<Detail>();
<#list fieldList as field>
	<#if field.dict_code != "">
		detailList.add(new Detail("${field.title}", model.get${field.name?cap_first}(), DictConstants.${field.dict_code}));
	<#elseif field.java_type == "Date">
		detailList.add(new Detail("${field.title}", model.get${field.name?cap_first}(), DetailDataTypeConstants.DATE));
	<#else>
		detailList.add(new Detail("${field.title}", model.get${field.name?cap_first}()));
	</#if>
</#list>
		mv.addObject("detailList", detailList);
		return mv;
	}
	
	/**
	 * 添加页面
	 * @return
	 */
	@RequestMapping(value="/add", method=RequestMethod.GET)
	public ModelAndView toAdd() {
		ModelAndView mv = new ModelAndView("${objectName2}/${objectName2}_edit");
		return mv;
	}
	
	/**
	 * 添加
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/add", method=RequestMethod.POST)
	public Result add(${objectName} model) {
	<#if hasCreateTime==true>
		model.setCreate_time(new Date());
	</#if>
	<#if hasCreateBy==true>
		model.setCreate_by(super.getLoginUserId());
	</#if>
		int effectRow = ${objectName?uncap_first}Service.add(model);
		if (effectRow > 0) {
			return success();
		}
		return error();
	}
	
	/**
	 * 修改页面
	 * @return
	 */
	@RequestMapping(value="/edit", method=RequestMethod.GET)
	public ModelAndView toEdit(Integer id) {
		ModelAndView mv = new ModelAndView("${objectName2}/${objectName2}_edit");
		${objectName} model = ${objectName?uncap_first}Service.getOne(id);
		mv.addObject("model", model);
		return mv;
	}
	
	/**
	 * 修改
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="/edit", method=RequestMethod.POST)
	public Result edit(${objectName} model) {
		int effectRow = ${objectName?uncap_first}Service.update(model);
		if (effectRow > 0) {
			return success();
		}
		return error();
	}
	
	/**
	 * 删除
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="del")
	public Result del(Integer id) {
		int effectRow = ${objectName?uncap_first}Service.delete(id);
		if (effectRow > 0) {
			return success();
		} 
		return error();
	}
	
	/**
	 * 批量删除
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="delBatch")
	public Result del_batch(Integer[] ids) {
		int effectRow = ${objectName?uncap_first}Service.deleteBatch(ids);
		if (effectRow > 0) {
			return success();
		} 
		return error();
	}
	
	@RequestMapping(value="/exportExcel")
	public ModelAndView exportExcel(Pager<${objectName}> pager){
		pager.putData("pageSize", 10000000);
		this.index(pager);
		List<${objectName}> list = pager.getResult();
		
		//标题(列名|列宽|单元格式)
		LinkedHashMap<String, String> headInfoList = new LinkedHashMap<String, String>();
<#list fieldList as field>
	<#if field.is_show == 1>
		headInfoList.put("${field.name}", "${field.title}");
	</#if>
</#list>

		//数据列表
		List<Map<String, Object>> dataList = MapUtils.bean2MapList(list, null);
		
		//数据字典
		Map<String, Map<String, Object>> dictMaps = new HashMap<String, Map<String, Object>>();
		
		Map<String,Object> dataMap = new HashMap<String,Object>();
		dataMap.put("headInfoList", headInfoList);
		dataMap.put("dataList", dataList);
		dataMap.put("dictMaps", dictMaps);
		POIExcelView erv = new POIExcelView();				
		ModelAndView mv = new ModelAndView(erv, dataMap);
		mv.addObject("fileName", "${title}");
		return mv;
    }
	
}
